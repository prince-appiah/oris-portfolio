{"version":3,"sources":["components/FeaturedProjects.jsx","components/Footer.jsx","assets/dribbble.svg","assets/github.svg","assets/gmail.svg","assets/linkedin.svg","components/GetInTouch.jsx","assets/avatar.png","components/Intro.jsx","components/Tools.jsx","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["FeaturedProjects","featuredProjects","mt","w","as","size","templateColumns","base","md","lg","gap","sm","map","item","id","FeaturedCard","display","flexDirection","_hover","cursor","bgColor","rounded","width","fit","height","loading","src","image","alt","name","py","px","fontWeight","color","textTransform","letterSpacing","noOfLines","textAlign","description","tags","tag","mr","variant","colorScheme","pt","label","icon","Settings","Link","href","repo","target","ExternalLink","link","Footer","my","alignItems","justifyContent","mb","textDecoration","textDecorationLine","Item","bg","hover","p","borderWidth","borderColor","GetInTouch","getInTouch","title","git","lnkdn","drble","mail","github","linkedin","dribbble","gmail","Intro","header","subtitle","fontSize","lineHeight","textUnderlineOffset","textUnderlinePosition","textDecorationWidth","textDecorationStyle","borderRadius","objectFit","avatar","ToolCard","pr","Tools","tools","tool","App","theme","maxW","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f4b0b10.chunk.js","sourcesContent":["import { IconButton } from '@chakra-ui/button';\nimport { ExternalLinkIcon, SettingsIcon } from '@chakra-ui/icons';\nimport { Image } from '@chakra-ui/image';\nimport { Badge, Box, Grid, Heading, Link, Text } from '@chakra-ui/layout';\nimport { Tooltip } from '@chakra-ui/react';\n\nexport const FeaturedProjects = ({ featuredProjects }) => {\n  return (\n    <Box mt={20} w=\"full\">\n      <Heading as=\"h3\" size=\"sm\">\n        FEATURED PROJECTS ✨\n      </Heading>\n\n      <Grid\n        mt={6}\n        templateColumns={{\n          base: 'repeat(1,1fr)',\n          md: 'repeat(1,1fr)',\n          lg: 'repeat(3,1fr)',\n        }}\n        gap={{ sm: 4, md: 10, lg: 16 }}\n      >\n        {featuredProjects.map(item => (\n          <FeaturedCard key={item.id} item={item} />\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nconst FeaturedCard = ({ item }) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={{ base: 'column', sm: 'column', md: 'row', lg: 'column' }}\n      _hover={{ cursor: 'pointer', bgColor: 'gray.50', rounded: 'md' }}\n    >\n      <Box width={{ base: '100%', md: '50%', lg: '100%' }}>\n        <Image\n          fit=\"cover\"\n          rounded=\"md\"\n          height={{ base: 200, sm: 200, md: 240, lg: 200 }}\n          width=\"full\"\n          loading=\"eager\"\n          src={item.image}\n          alt={item.name}\n        />\n      </Box>\n      <Box\n        width={{ md: '50%', lg: '100%' }}\n        py={{ base: 4, sm: 4, md: 4, lg: 4 }}\n        px={{ base: 2, md: 4 }}\n      >\n        <Heading\n          as=\"h3\"\n          fontWeight=\"medium\"\n          color=\"gray.700\"\n          size=\"sm\"\n          textTransform=\"uppercase\"\n          letterSpacing=\"wide\"\n        >\n          {item.name}\n        </Heading>\n        <Text\n          color=\"gray.500\"\n          fontWeight=\"light\"\n          noOfLines=\"5\"\n          textAlign=\"justify\"\n          py={{ base: 1, md: 1 }}\n        >\n          {item.description}\n        </Text>\n\n        <Box py={{ base: 1, sm: 2, md: 2 }}>\n          {item.tags?.map(tag => (\n            <Badge\n              mr={2}\n              py={1}\n              px={2}\n              variant=\"subtle\"\n              _hover={{\n                bgColor: 'purple.400',\n                color: 'white',\n                cursor: 'pointer',\n              }}\n              colorScheme=\"purple\"\n            >\n              {tag}\n            </Badge>\n          ))}\n        </Box>\n\n        <Box pt={{ base: 4, sm: 4, md: 3 }}>\n          <Tooltip label=\"View Source Code\">\n            <IconButton\n              mr={4}\n              size=\"sm\"\n              variant=\"outline\"\n              icon={<SettingsIcon />}\n              as={Link}\n              href={item.repo}\n              target=\"_blank\"\n            />\n          </Tooltip>\n\n          <Tooltip label=\"Live Preview\">\n            <IconButton\n              mr={4}\n              size=\"sm\"\n              variant=\"outline\"\n              icon={<ExternalLinkIcon />}\n              as={Link}\n              href={item.link}\n              target=\"_blank\"\n            />\n          </Tooltip>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n","import { Box, Text } from '@chakra-ui/layout';\nimport React from 'react';\n\nexport const Footer = () => {\n  return (\n    <Box\n      my={8}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Text color=\"gray.500\" mb={3}>\n        Designed and developed with by{' '}\n        <Box\n          as=\"span\"\n          color=\"purple\"\n          fontWeight=\"medium\"\n          textDecoration=\"underline\"\n          textDecorationLine=\"grammar-error\"\n        >\n          Prince Appiah\n        </Box>\n      </Text>\n      <Text fontWeight=\"medium\">&copy; 2021</Text>\n    </Box>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/dribbble.bd1753c1.svg\";","export default __webpack_public_path__ + \"static/media/github.6c070a02.svg\";","export default __webpack_public_path__ + \"static/media/gmail.e8afd804.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.2742b0f7.svg\";","import { Image } from '@chakra-ui/image';\nimport { Box, Flex, Heading, LinkBox, Text } from '@chakra-ui/layout';\nimport dribbble from '../assets/dribbble.svg';\nimport github from '../assets/github.svg';\nimport gmail from '../assets/gmail.svg';\nimport linkedin from '../assets/linkedin.svg';\n\nfunction GetInTouch({ getInTouch }) {\n  const { title, git, lnkdn, drble, mail } = getInTouch;\n  return (\n    <Box mt=\"20\">\n      <Heading as=\"h3\" size=\"sm\">\n        {title}\n      </Heading>\n      <Flex mt=\"6\">\n        <Item icon={github} link={git.link} bg=\"gray.100\" hover=\"gray.300\" />\n        <Item icon={linkedin} link={lnkdn.link} bg=\"blue.50\" hover=\"blue.200\" />\n        <Item icon={dribbble} link={drble.link} bg=\"red.50\" hover=\"red.100\" />\n        <Item icon={gmail} link={mail.link} bg=\"red.50\" hover=\"red.100\" />\n      </Flex>\n      <Flex mt=\"14\">\n        {/* <Tooltip\n          label=\"Resume under construction, sorry. Check back later\"\n          closeDelay={500}\n          hasArrow\n        > */}\n        <Box\n          as=\"a\"\n          p=\"4\"\n          rounded=\"md\"\n          color=\"purple.600\"\n          bg=\"purple.100\"\n          href=\"https://drive.google.com/file/d/1CC4viyw_1mZgWOvlxAM7-pZZCQRj4w7k/view?usp=sharing\"\n          target=\"_blank\"\n          _hover={{ bg: 'purple.200', cursor: 'pointer' }}\n        >\n          <Text fontWeight=\"medium\"> Download Resume 📝</Text>\n        </Box>\n        {/* </Tooltip> */}\n      </Flex>\n    </Box>\n  );\n}\n\nconst Item = ({ icon, bg, hover, link }) => {\n  return (\n    <LinkBox\n      as=\"a\"\n      href={link}\n      target=\"_blank\"\n      width=\"50px\"\n      height=\"50px\"\n      mr=\"8\"\n      p=\"2.5\"\n      rounded=\"base\"\n      bg={bg}\n      borderWidth=\"1px\"\n      borderColor={hover}\n      _hover={{ bg: hover }}\n    >\n      <Image src={icon} />\n    </LinkBox>\n  );\n};\n\nexport default GetInTouch;\n","export default __webpack_public_path__ + \"static/media/avatar.98c1ccb8.png\";","import { Image } from '@chakra-ui/image';\nimport { Circle, Heading, Text } from '@chakra-ui/layout';\nimport { Box } from '@chakra-ui/react';\nimport avatar from '../assets/avatar.png';\n\nfunction Intro({ header }) {\n  const { title, subtitle } = header;\n\n  return (\n    <Box\n      mt=\"8\"\n      display=\"flex\"\n      flexDirection={{ base: 'column', md: 'row' }}\n      justifyContent=\"space-between\"\n      alignItems={{ base: 'center' }}\n    >\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-evenly\">\n        <Heading\n          as=\"h3\"\n          size=\"lg\"\n          color=\"gray.800\"\n          letterSpacing=\"wide\"\n          fontWeight=\"bold\"\n        >\n          {title}\n        </Heading>\n\n        <Text\n          fontSize=\"2xl\"\n          lineHeight=\"tall\"\n          letterSpacing=\"wide\"\n          fontWeight=\"normal\"\n          color=\"gray.500\"\n          pt={5}\n        >\n          {subtitle}\n        </Text>\n\n        <Text\n          fontSize=\"2xl\"\n          lineHeight=\"tall\"\n          letterSpacing=\"wide\"\n          fontWeight=\"normal\"\n          color=\"gray.500\"\n          pt={5}\n        >\n          I'm currently a{' '}\n          <Box as=\"span\" color=\"purple.500\" fontWeight={500}>\n            backend developer\n          </Box>{' '}\n          at{' '}\n          <Box\n            as=\"a\"\n            color=\"purple.500\"\n            fontWeight={500}\n            _hover={{\n              cursor: 'pointer',\n              textUnderlineOffset: 6,\n              textUnderlinePosition: 'right',\n              textDecorationWidth: 1,\n              textDecorationStyle: 'wavy',\n              textDecoration: 'underline',\n            }}\n            href=\"https://clyver.com\"\n            target=\"_blank\"\n          >\n            Clyver Inc\n          </Box>\n        </Text>\n      </Box>\n      <Box>\n        <Circle size=\"2xs\" rounded=\"full\">\n          <Image\n            borderRadius=\"full\"\n            objectFit=\"contain\"\n            bg=\"gray.400\"\n            src={avatar}\n            alt={title}\n          />\n        </Circle>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Intro;\n","import { Image } from '@chakra-ui/image';\nimport { Box, Grid, Heading, Text } from '@chakra-ui/layout';\n\nfunction Tools({ tools }) {\n  return (\n    <Box mt=\"20\">\n      <Heading as=\"h3\" size=\"sm\">\n        TOOLS I WORK WITH 🛠\n      </Heading>\n      <Grid\n        mt=\"6\"\n        templateColumns={{ base: 'repeat(2,1fr)', md: 'repeat(3,1fr)' }}\n        gap={6}\n      >\n        {tools.map(tool => (\n          <ToolCard key={tool.id} title={tool.name} icon={tool.icon} />\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nconst ToolCard = ({ title, icon }) => {\n  return (\n    <Box p=\"2\" height=\"full\" width=\"auto\" bg=\"gray.100\">\n      <Box p=\"3\" display=\"flex\" alignItems=\"center\">\n        <Image src={icon} width={14} height={14} pr={6} />\n        <Text color=\"gray.800\" fontWeight=\"medium\">\n          {title}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Tools;\n","import { Container } from '@chakra-ui/layout';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\nimport React from 'react';\nimport { FeaturedProjects } from './components/FeaturedProjects';\nimport { Footer } from './components/Footer';\n\nimport GetInTouch from './components/GetInTouch';\nimport Intro from './components/Intro';\nimport Tools from './components/Tools';\nimport { header, getInTouch, tools, featuredProjects } from './data.json';\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Container maxW=\"container.lg\">\n        <Intro header={header} />\n        <GetInTouch getInTouch={getInTouch} />\n        <Tools tools={tools} />\n        <FeaturedProjects featuredProjects={featuredProjects} />\n        <Footer />\n      </Container>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <ColorModeScript />\n      <App />\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}